def compare_algorithms(tsp_sizes=[10, 20, 30, 40, 50]):
    """Compare performance of different algorithms"""
    results = []
    
    for size in tsp_sizes:
        test_tsp = random_tsp(size)
        initial_tour = random_tour(size)
        
        algorithms = [
            ("Steepest Hill Climbing", steepest_hill_climbing),
            ("Random Restart Hill Climbing", steepest_hill_climbing_random_restart),
            ("Stochastic Hill Climbing", stochastic_hill_climbing),
            ("Simulated Annealing", simulated_annealing)
        ]
        
        for name, algo in algorithms:
            start_time = time.time()
            tour, length = algo(test_tsp, initial_tour) if name != "Random Restart Hill Climbing" else algo(test_tsp)
            end_time = time.time()
            
            results.append({
                'Algorithm': name,
                'Size': size,
                'Tour Length': length,
                'Time (ms)': (end_time - start_time) * 1000
            })
    
    # Convert results to DataFrame
    df = pd.DataFrame(results)
    print(df)
    
    # Plot results
    plt.figure(figsize=(12, 6))
    for name in df['Algorithm'].unique():
        data = df[df['Algorithm'] == name]
        plt.plot(data['Size'], data['Time (ms)'], marker='o', label=name)
    
    plt.xlabel('Number of Cities')
    plt.ylabel('Time (ms)')
    plt.title('Algorithm Performance Comparison')
    plt.legend()
    plt.show()

# Run comparison
compare_algorithms()